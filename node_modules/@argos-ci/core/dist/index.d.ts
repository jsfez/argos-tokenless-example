import * as sharp from 'sharp';

interface UploadParameters {
    /** Globs matching image file paths to upload */
    files?: string[];
    /** Root directory to look for image to upload (default to current directory) */
    root?: string;
    /** Globs matching image file paths to ignore (default to "**\/*.\{png,jpg,jpeg\}") */
    ignore?: string[];
    /** Base URL of Argos API (default to "https://api.argos-ci.com/v2/") */
    apiBaseUrl?: string;
    /** Git commit */
    commit?: string;
    /** Git branch */
    branch?: string;
    /** Argos repository token */
    token?: string;
    /** Name of the build used to trigger multiple Argos builds on one commit */
    buildName?: string;
    /** Parallel test suite mode */
    parallel?: {
        /** Unique build ID for this parallel build */
        nonce: string;
        /** The number of parallel nodes being ran */
        total: number;
    } | false;
}
/**
 * Upload screenshots to argos-ci.com.
 */
declare const upload: (params: UploadParameters) => Promise<{
    build: {
        id: string;
        url: string;
    };
    screenshots: {
        optimizedPath: string;
        format: keyof sharp.FormatEnum;
        hash: any;
        name: string;
        path: string;
    }[];
}>;

export { UploadParameters, upload };
